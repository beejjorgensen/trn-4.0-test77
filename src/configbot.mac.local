#!/usr/bin/expect

# All these .* are to handle wordwrap

spawn ./Configure
expect {
	-re "Would.*you.*like.*to.*see.*the.*instructions?" { send n\r ; exp_continue; }
	-re "Which.*of.*these.*apply,.*if.*any?" { send none\r ; exp_continue; } 
	-re "Operating.*system.*name?" { send darwin\r ; exp_continue; } 
	-re "Select.*the.*news.*spool.*support" { send both\r ; exp_continue; }
	-re "Do.*you.*want.*to.*use.*generic.*user-authentication?" { send y\r ; exp_continue; } 
	-re "Enter.*\"local\",.*a.*server.*name,.*or.*a.*file name" { send local\r ; exp_continue; }  
	-re "Do.*you.*expect.*to.*run.*these.*scripts.*and.*binaries.*on.*multiple.*machines?" { send n\r ; exp_continue; } 
	-re "Installation.*prefix.*to.*use?" { send ~/.local\r ; exp_continue; }  
	-re "Where.*is.*the.*news.*library.*directory.*for.*local.*news?" { send \r ; exp_continue; }
	-re "Where.*is.*the.*newsgroups.*file?" { send \r ; exp_continue; }
	-re "Where.*is.*the.*subscriptions.*file?" { send \r ; exp_continue; }
	-re "Pathname.*where.*trn's.*inews.*will.*reside?" { send \r ; exp_continue; }  
	-re "Which.*inews.*should.*be.*used.*for.*posting.*local.*articles?" { send inews\r ; exp_continue; }
	-re "Where.*is.*news.*spooled?" { send \r ; exp_continue; }
	-re "Enter.*a.*local.*directory.*for.*overview.*files.*or.*\"none\":" { send \r ; exp_continue; }
	-re "Where.*is.*the.*overview.fmt.*file.*for.*this.*database?" { send \r ; exp_continue; }
	-re "Enter.*a.*local.*directory.*for.*thread.*files.*or.*\"none\":" { send \r ; exp_continue; }
	-re "Where.*is.*the.*active.*file.*for.*local.*news?" { send \r ; exp_continue; }
	-re "Where.*is.*active.times?" { send \r ; exp_continue; }
	-re "Do.*you.*want.*trn.*to.*default.*to.*-x,.*regardless.*of.*name?" { send n\r ; exp_continue; } 
	-re "Should.*the.*-X.*option.*be.*on.*by.*default.*for.*trn" { send y\r ; exp_continue; }  
	-re "Pathname.*where.*the.*public.*executables.*will.*reside?" { send \r ; exp_continue; } 
	-re "What.*directory.*name.*should.*be.*used.*for.*the.*install?" { send \r ; exp_continue; }  
	-re "What.*is.*the.*distribution.*code.*for.*your.*local.*organization?" { send \r ; exp_continue; }
	-re "What.*is.*the.*distribution.*code.*for.*your.*organization?" { send \r ; exp_continue; }
	-re "What.*is.*the.*distribution.*code.*for.*your.*city?" { send \r ; exp_continue; }
	-re "What.*is.*the.*distribution.*code.*for.*your.*state/province?" { send \r ; exp_continue; }
	-re "What.*is.*the.*distribution.*code.*for.*your.*multi-state.*region?" { send \r ; exp_continue; }
	-re "What.*is.*the.*distribution.*code.*for.*your.*country?" { send \r ; exp_continue; }
	-re "What.*is.*the.*distribution.*code.*for.*your.*continent?" { send \r ; exp_continue; }   
	-re "Use.*which.*C.*compiler?" { send \r ; exp_continue; }  
	-re "What.*hostname.*goes.*on.*the.*From.*line.*of.*this.*machine's.*postings?" { send \r ; exp_continue; }
    -re "Compare.*how.*many.*dot-separated.*words.*from.*the.*end.*of.*the.*hostname?" { send \r; exp_continue; }
	-re "Where.*do.*the.*manual.*pages.*go?" { send ~/.local/man/man1\r ; exp_continue; }
	-re "What.*directory.*name.*should.*be.*used.*for.*the.*install?" { send \r ; exp_continue; }  
	-re "Pathname.*where.*the.*private.*library.*files.*will.*reside?" { send \r ; exp_continue; } 
	-re "What.*directory.*name.*should.*be.*used.*for.*the.*install?" { send \r ; exp_continue; }
	-re "Which.*interactive.*speller.*should.*we.*use?" { send ispell\r ; exp_continue; }
	-re "What.*options.*should.*be.*used?" { send none\r ; exp_continue; } 
	-re "What.*global.*mimecap.*file.*should.*trn.*use?" { send \r ; exp_continue; }
	-re "Organization:" { send "Example.com Inc\r" ; exp_continue; }
	-re "Do.*you.*want.*to.*include.*strn's.*scan.*and.*score.*features?" { send \r ; exp_continue; }  
	-re "Directories.*to.*use.*for.*library.*searches?" { send \r ; exp_continue; } 
	-re "What.*is.*the.*file.*extension.*used.*for.*shared.*libraries?" { send \r ; exp_continue; }  
	-re "Any.*additional.*libraries?" { send \r ; exp_continue; } 
	-re "What.*optimizer/debugger.*flag.*should.*be.*used?" { send \r ; exp_continue; } 
	-re "Any.*additional.*cc.*flags?" { send \r ; exp_continue; }  
	-re "Any.*additional.*ld.*flags" { send  \r ; exp_continue; }  
	-re "Berkeley/V7.*format.*for.*full.*name.*in.*/etc/passwd?" { send y\r ; exp_continue; }  
	-re "Shall.*I.*use.*/usr/bin/nm.*to.*extract.*C.*symbols.*from.*the.*libraries?" { send n\r ; exp_continue; }  
    -re "Your.*system.*appears.*to.*NOT.*have.*termlib-style.*routines..*Is.*this.*true?" { send n\r; exp_continue; }
    -re "Specify.*termlib.*path:" { send -- -lncurses\r; exp_continue; }
	-re "Should.*ORGANIZATION.*be.*ignored?" { send \r ; exp_continue; }  
	-re "Does.*your.*mailer.*understand.*INTERNET.*addresses?" { send \r ; exp_continue; }  
	-re "News.*admin.*login?" { send \r ; exp_continue; }  
	-re "Type.*return.*to.*start.*printing.*the.*test.*characters" { send \r ; exp_continue; }
	-re "Would.*you.*like.*to.*see.*that.*again?" { send n\r ; exp_continue; }
	-re "Do.*you.*have.*buffering.*?" { send y\r ; exp_continue; }  
	-re "Do.*you.*have.*buffering.*on.*stdout.*to.*terminals?" { send y\r ; exp_continue; }
	-re "Some.*systems.*have.*problems.*with.*vfork.*Do.*you.*want.*to.*use.*it?" { send \r ; exp_continue; }
	-re "What.*is.*the.*default.*editor.*on.*your.*system?" { send /usr/bin/vim\r ; exp_continue; }  
	-re "Mail.*transport.*agent.*to.*be.*used?" { send \r ; exp_continue; } 
	-re "In.*which.*file.*is.*yet-to-be-read.*mail.*spooled?" { send \r ; exp_continue; }  
	-re "What's.*the.*first.*character.*of.*a.*mailbox.*file?" { send \r ; exp_continue; }  
	-re "What.*pager.*is.*used.*on.*your.*system?" { send less\r; exp_continue; }
	-re "Preferred.*shell.*to.*be.*used?" { send /bin/zsh\r ; exp_continue; }  
	-re "Which.*compiler.*compiler.*shall.*I.*use?" { send \r; exp_continue; }
	-re "Type.*carriage.*return.*to.*continue" { send \r ; exp_continue; }

	-re "Press.*return.*or.*use.*a.*shell.*escape.*to.*edit.*config.sh:" { send \r ; exp_continue; }
	-re "I.*see.*a.*config.sh.*file..*Shall.*I.*use.*it.*to.*set.*the.*defaults?" { send n\r ; exp_continue; }
	-re "Use.*that.*name.*anyway?" { send y\r ; exp_continue; } 
}

